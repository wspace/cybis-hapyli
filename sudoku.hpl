import "stdlib/base.hpl"
import "stdlib/list.hpl"


def read-sudoku () = 
let
    *sudoku = (alloc 81)
in
    (read-rows 0 *sudoku)
        
        
def read-rows (currentRow *sudoku) = 
    (if (< currentRow 9)
        (do (read-cells-in-row currentRow 0 *sudoku)
            (read-rows (++ currentRow) *sudoku))
        *sudoku)
        
        
def read-cells-in-row (row currentColumn *sudoku) = 
let
    cellIndex = (+ (* 9 row) currentColumn)
    *cell = (+ *sudoku cellIndex)
in
    (if (< currentColumn 9)
        (do (read-char *cell)
            (read-cells-in-row row (++ currentColumn) *sudoku))
        (do (read-char)
            *sudoku))

            
def print-sudoku (*sudoku) = 
    (print-rows 0 *sudoku)
    
    
def print-rows (currentRow *sudoku) = 
    (if (< currentRow 9)
        (do (print-cells-in-row currentRow 0 *sudoku)
            (print-rows (++ currentRow) *sudoku))
        *sudoku)
        
        
def print-cells-in-row (row currentColumn *sudoku) =
let
    cellIndex = (+ (* 9 row) currentColumn)
    *cell = (+ *sudoku cellIndex)
in
    (if (< currentColumn 9)
        (do (print-char (ref *cell))
            (print-cells-in-row row (++ currentColumn) *sudoku))
        (do (print-char '\n')
            *sudoku))
            
            
def copy-sudoku (*source) = 
let
    *dest = (alloc 81)
in
    (copy-rows 0 *source *dest)

    
def copy-rows (currentRow *source *dest) = 
    (if (< currentRow 9)
        (do (copy-cells-in-row currentRow 0 *source *dest)
            (copy-rows (++ currentRow) *source *dest))
        *dest)

        
def copy-cells-in-row (row currentColumn *source *dest) =
let
    cellIndex = (+ (* 9 row) currentColumn)
    *sourceCell = (+ *source cellIndex)
    *destCell = (+ *dest cellIndex)
in
    (if (< currentColumn 9)
        (do (set *destCell (ref *sourceCell))
            (copy-cells-in-row row (++ currentColumn) *source *dest))
        *dest)

